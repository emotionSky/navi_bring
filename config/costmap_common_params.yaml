#obstacle_range: 3.5
#raytrace_range: 2.0

#robot_radius: 0.4  #机器人半径  单位：m
#inflation_radius: 0.20  #0.5
#max_obstacle_height: 2.0
#min_obstacle_height: 0.2
#observation_sources: laser_scan_sensor 

#laser_scan_sensor: {sensor_frame: base_laser, data_type: LaserScan, topic: base_scan, marking: true, clearing: true}

max_obstacle_height: 0.7  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
# robot_radius: 0.40  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
footprint: [[0.26, 0.26], [0.26, -0.26], [-0.26, -0.26], [-0.26, 0.26]]

map_type: voxel

# 配置障碍物图层
obstacle_layer:
  enabled:              true   # 是否启用该图层
  max_obstacle_height:  1.5
  origin_z:             0.0
  z_resolution:         0.2
  z_voxels:             2
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1       # 只能设置为0或1，用来更新地图上的代价值，一般设置为1
  track_unknown_space:  true    # 未知区域不能作为可自由移动区域，设置true
  obstacle_range: 2.5           # 设置机器人检测障碍物的最大范围
  raytrace_range: 3.0
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  scan   bump
  # scan:
  #   data_type: LaserScan
  #   topic: base_scan   #/为后加
  #   marking: true
  #   clearing: true
  #   min_obstacle_height: 0.25
  #   max_obstacle_height: 0.35
  bump:
    data_type: PointCloud2
    topic: mobile_base/sensors/bumper_pointcloud
    marking: true
    clearing: false
    min_obstacle_height: 0.0
    max_obstacle_height: 0.15
  # for debugging only, let's you see the entire voxel grid

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.52  # 一般设置为机器人底盘的直径大小，经常碰撞障碍物需要增大，无法通过狭窄区域需要减小

static_layer:
  enabled:              true   # 静态地图层，即SLAM中构建的地图层
  

  

